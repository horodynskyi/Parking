// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parking.DAL;

#nullable disable

namespace Parking.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220115115605_ChangeDateFormat")]
    partial class ChangeDateFormat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Parking.DAL.Models.Arrival", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint");

                    b.Property<string>("StartPark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("StatusId");

                    b.ToTable("Arrivals");
                });

            modelBuilder.Entity("Parking.DAL.Models.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Parking.DAL.Models.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ArrivalId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndPark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Sum")
                        .HasColumnType("real");

                    b.Property<long?>("TariffId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("TariffId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Parking.DAL.Models.Status", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Parking.DAL.Models.Tariff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("Parking.DAL.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronumic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Parking.DAL.Models.Arrival", b =>
                {
                    b.HasOne("Parking.DAL.Models.Car", "Car")
                        .WithMany("Arrivals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Parking.DAL.Models.Status", "Status")
                        .WithMany("Arrivals")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Car");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Parking.DAL.Models.Car", b =>
                {
                    b.HasOne("Parking.DAL.Models.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Parking.DAL.Models.Payment", b =>
                {
                    b.HasOne("Parking.DAL.Models.Arrival", "Arrival")
                        .WithMany("Payments")
                        .HasForeignKey("ArrivalId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Parking.DAL.Models.Tariff", "Tariff")
                        .WithMany("Payments")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Arrival");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("Parking.DAL.Models.Arrival", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Parking.DAL.Models.Car", b =>
                {
                    b.Navigation("Arrivals");
                });

            modelBuilder.Entity("Parking.DAL.Models.Status", b =>
                {
                    b.Navigation("Arrivals");
                });

            modelBuilder.Entity("Parking.DAL.Models.Tariff", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Parking.DAL.Models.User", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
